// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable enable

namespace ControleTiAPI.Data
{
    public partial class DataContextModel
    {
        partial void Initialize()
        {
            var cellPhone = CellPhoneEntityType.Create(this);
            var chip = ChipEntityType.Create(this);
            var computer = ComputerEntityType.Create(this);
            var computerLog = ComputerLogEntityType.Create(this);
            var computerMemory = ComputerMemoryEntityType.Create(this);
            var computerProfile = ComputerProfileEntityType.Create(this);
            var computersReport = ComputersReportEntityType.Create(this);
            var dVR = DVREntityType.Create(this);
            var department = DepartmentEntityType.Create(this);
            var employee = EmployeeEntityType.Create(this);
            var hostFuncionalities = HostFuncionalitiesEntityType.Create(this);
            var memory = MemoryEntityType.Create(this);
            var networkNode = NetworkNodeEntityType.Create(this);
            var nobreak = NobreakEntityType.Create(this);
            var computerPreventive = ComputerPreventiveEntityType.Create(this);
            var dVRPreventive = DVRPreventiveEntityType.Create(this);
            var nobreakPreventive = NobreakPreventiveEntityType.Create(this);
            var serverPreventive = ServerPreventiveEntityType.Create(this);
            var printer = PrinterEntityType.Create(this);
            var processingUnit = ProcessingUnitEntityType.Create(this);
            var ramal = RamalEntityType.Create(this);
            var router = RouterEntityType.Create(this);
            var serverFunctionality = ServerFunctionalityEntityType.Create(this);
            var serverHost = ServerHostEntityType.Create(this);
            var serverMemory = ServerMemoryEntityType.Create(this);
            var serverStorage = ServerStorageEntityType.Create(this);
            var serverVM = ServerVMEntityType.Create(this);
            var skypeEmployee = SkypeEmployeeEntityType.Create(this);
            var storage = StorageEntityType.Create(this);
            var switches = SwitchesEntityType.Create(this);
            var user = UserEntityType.Create(this);
            var userClaims = UserClaimsEntityType.Create(this);
            var vMFunctionalities = VMFunctionalitiesEntityType.Create(this);
            var vpnEmployee = VpnEmployeeEntityType.Create(this);

            ChipEntityType.CreateForeignKey1(chip, cellPhone);
            ChipEntityType.CreateForeignKey2(chip, department);
            ChipEntityType.CreateForeignKey3(chip, employee);
            ComputerEntityType.CreateForeignKey1(computer, department);
            ComputerEntityType.CreateForeignKey2(computer, employee);
            ComputerEntityType.CreateForeignKey3(computer, processingUnit);
            ComputerEntityType.CreateForeignKey4(computer, computerProfile);
            ComputerEntityType.CreateForeignKey5(computer, storage);
            ComputerLogEntityType.CreateForeignKey1(computerLog, computer);
            ComputerMemoryEntityType.CreateForeignKey1(computerMemory, computer);
            ComputerMemoryEntityType.CreateForeignKey2(computerMemory, memory);
            EmployeeEntityType.CreateForeignKey1(employee, department);
            HostFuncionalitiesEntityType.CreateForeignKey1(hostFuncionalities, serverFunctionality);
            HostFuncionalitiesEntityType.CreateForeignKey2(hostFuncionalities, serverHost);
            NetworkNodeEntityType.CreateForeignKey1(networkNode, employee);
            NetworkNodeEntityType.CreateForeignKey2(networkNode, switches);
            ComputerPreventiveEntityType.CreateForeignKey1(computerPreventive, computer);
            DVRPreventiveEntityType.CreateForeignKey1(dVRPreventive, dVR);
            NobreakPreventiveEntityType.CreateForeignKey1(nobreakPreventive, nobreak);
            ServerPreventiveEntityType.CreateForeignKey1(serverPreventive, serverHost);
            RamalEntityType.CreateForeignKey1(ramal, department);
            RamalEntityType.CreateForeignKey2(ramal, employee);
            ServerMemoryEntityType.CreateForeignKey1(serverMemory, memory);
            ServerMemoryEntityType.CreateForeignKey2(serverMemory, serverHost);
            ServerStorageEntityType.CreateForeignKey1(serverStorage, serverHost);
            ServerStorageEntityType.CreateForeignKey2(serverStorage, storage);
            ServerVMEntityType.CreateForeignKey1(serverVM, serverHost);
            SkypeEmployeeEntityType.CreateForeignKey1(skypeEmployee, employee);
            UserClaimsEntityType.CreateForeignKey1(userClaims, user);
            VMFunctionalitiesEntityType.CreateForeignKey1(vMFunctionalities, serverFunctionality);
            VMFunctionalitiesEntityType.CreateForeignKey2(vMFunctionalities, serverVM);
            VpnEmployeeEntityType.CreateForeignKey1(vpnEmployee, employee);

            CellPhoneEntityType.CreateAnnotations(cellPhone);
            ChipEntityType.CreateAnnotations(chip);
            ComputerEntityType.CreateAnnotations(computer);
            ComputerLogEntityType.CreateAnnotations(computerLog);
            ComputerMemoryEntityType.CreateAnnotations(computerMemory);
            ComputerProfileEntityType.CreateAnnotations(computerProfile);
            ComputersReportEntityType.CreateAnnotations(computersReport);
            DVREntityType.CreateAnnotations(dVR);
            DepartmentEntityType.CreateAnnotations(department);
            EmployeeEntityType.CreateAnnotations(employee);
            HostFuncionalitiesEntityType.CreateAnnotations(hostFuncionalities);
            MemoryEntityType.CreateAnnotations(memory);
            NetworkNodeEntityType.CreateAnnotations(networkNode);
            NobreakEntityType.CreateAnnotations(nobreak);
            ComputerPreventiveEntityType.CreateAnnotations(computerPreventive);
            DVRPreventiveEntityType.CreateAnnotations(dVRPreventive);
            NobreakPreventiveEntityType.CreateAnnotations(nobreakPreventive);
            ServerPreventiveEntityType.CreateAnnotations(serverPreventive);
            PrinterEntityType.CreateAnnotations(printer);
            ProcessingUnitEntityType.CreateAnnotations(processingUnit);
            RamalEntityType.CreateAnnotations(ramal);
            RouterEntityType.CreateAnnotations(router);
            ServerFunctionalityEntityType.CreateAnnotations(serverFunctionality);
            ServerHostEntityType.CreateAnnotations(serverHost);
            ServerMemoryEntityType.CreateAnnotations(serverMemory);
            ServerStorageEntityType.CreateAnnotations(serverStorage);
            ServerVMEntityType.CreateAnnotations(serverVM);
            SkypeEmployeeEntityType.CreateAnnotations(skypeEmployee);
            StorageEntityType.CreateAnnotations(storage);
            SwitchesEntityType.CreateAnnotations(switches);
            UserEntityType.CreateAnnotations(user);
            UserClaimsEntityType.CreateAnnotations(userClaims);
            VMFunctionalitiesEntityType.CreateAnnotations(vMFunctionalities);
            VpnEmployeeEntityType.CreateAnnotations(vpnEmployee);

            AddAnnotation("ProductVersion", "7.0.2");
            AddAnnotation("Relational:DefaultSchema", "ti");
            AddAnnotation("Relational:MaxIdentifierLength", 128);
            AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
        }
    }
}
